/* English localization strings for core Loki functionality. */

"editor" {
    "no textarea" = "Cannot create a Loki editor: no textarea was provided.";
    "not a textarea" = "Cannot create a Loki editor: the element provided is not a TEXTAREA element.";
    "no matching textarea" = 'No elements matched the selector "{0}".';
    "multiple matching textarea" = 'More than one element matched the selector "{0}".';
    "no base uri" = 'Cannot automatically determine the Loki base URI. Please set it explicitly.';
    
    "unknown context" = 'No such context "{0}".';
    "unavailable context" = 'The context "{0}" is not available on this Loki instance.';
    
    "rich text" = 'Your browser has no support for rich text (HTML) editing.';
    
    "loading" = 'Loading editorâ€¦';
    "some plugins failed" = 'Some plugins failed to load.';
    "plugin failure teaser" = 'Some plugins failed to load. Click here for details.';
};

"chooser" {
    "unknown name" = 'Unknown item or set "{0}".';
    "invalid selector component" = 'Invalid selector component "{0}".';
    "invalid operator" = 'Invalid operator "{0}".';
};

"locale" {
    "string undefined in locale" = 'No such locale string "{0}". (Current locale: {1}).';
};

"configuration" {
    "option without name" = "Cannot define a configuration option without a name.";
    "unknown option" = 'Unknown option name "{0}".';
};

"request" {
    "no xhr" = "Your browser lacks support for XMLHttpRequest.";
    "non-object headers" = "Request headers must be given as an object.";
};

"notice" {
    "invalid level" = '"{0}" is not a valid Loki notice level.';
};

"version" {
    "invalid" = 'Cannot parse "{0}"; it is not a valid version number.';
};

"plugin" {
    "manager" {
        "invalid dep" = 'Cannot load plugin "{0}": "{1}" is not a valid dependency string.';
        "invalid version" = 'Cannot load plugin "{0}": there is an invalid version "{1}" in its dependency string.';
        "not found" = 'Plugin "{0}" is not available.';
        "download failed" = 'Failed to download plugin "{0}"; HTTP error {1}: {2}.';
        "evaluation error" = 'Error while loading plugin "{0}": {1.message}.';
        "dependencies failed" = 'Could not load plugin "{0}" because the following {2!p:dependency} failed: {3}.';
        "dependency constraint failure" = 'Could not load plugin "{0}": it requires plugin {1} {2}, but only version {3} is available.';
    };
};
